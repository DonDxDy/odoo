<template>
    <t t-name="web.CalendarView" owl="1">
        <div class="o_calendar_container"
            t-on-o-popover-close="_onPopoverClose"
            t-on-edit-event.stop="_onEditEvent"
            t-on-delete-event.stop="_onDeleteEvent"
            t-on-create-event.stop="_onCreateEvent"
            t-on-open-event.stop="_onOpenEvent"
        >
            <div class="o_calendar_view">
                <FullCalendarAdapter class="o_calendar_widget" t-props="_fullCalendarProps"/>
            </div>
            <div class="o_calendar_sidebar_container d-none d-md-block">
                <div class="o_calendar_sidebar">
                    <div t-ref="calendarMini" class="o_calendar_mini" t-if="_displayCalendarMini"/>
                    <t t-if="!props.fullWidth">
                        <t t-foreach="props.filters" t-as="filterKey" t-key="filterKey">
                            <t t-set="filter" t-value="props.filters[filterKey]"/>
                            <t t-if="filter.filters.some(f => f.display == null or f.display)">
                                <FilterSection t-props="_getSidebarFilterProps(filterKey)"/>
                            </t>
                        </t>
                    </t>
                </div>
            </div>
            <t t-if="state.displayPopover">
                <Popover position="'right'"
                    target="state.popoverTarget"
                    popoverClass="'o_cw_popover_wrapper'"
                >
                    <t t-set-slot="popover">
                        <CalendarYearPopover t-if="props.scale === 'year'"
                            t-props="state.popoverProps"
                        />
                        <CalendarPopover t-else=""
                            t-props="state.popoverProps"
                        />
                    </t>
                </Popover>
            </t>
        </div>
    </t>

    <t t-name="web.CalendarView.event" owl="1">
        <div
            t-att-style="typeof color === 'string' ? ('background-color:' + color) + ';' : ''"
            t-attf-class="{{record.is_highlighted ? 'o_event_hightlight' : ''}} {{typeof color === 'number' ? ('o_calendar_color_' + color) : 'o_calendar_color_1'}}"
        >
            <span t-if="displayTime" class="fc-time" t-esc="displayTime"/>
            <div class="o_event_title" t-esc="record.display_name"/>
        </div>
    </t>

    <t t-name="web.CalendarFilterSection" owl="1">
        <div class="o_calendar_filter">
            <t t-set="needCollapse" t-value="props.filters.length > 2 and props.title"/>
            <h5 t-if="needCollapse" type="button"
                class="d-flex justify-content-between align-items-center"
                t-on-click.prevent.stop="_onToggle"
            >
                <t t-esc="props.title"/><i t-attf-class="o_cw_filter_collapse_icon fa fa-chevron-{{ state.isOpened ? 'down' : 'left' }}"/>
            </h5>
            <h5 t-elif="props.title" t-esc="props.title"/>

            <t t-if="state.isOpened">
                <div t-attf-class="o_calendar_filter_items" t-attf-id="o_cw_filter_collapse_{{props.title}}">
                    <t t-foreach="props.filters" t-as="filter" t-key="filter.value">
                        <t t-if="filter.display == null or filter.display">
                            <t t-set="idForLabel" t-value="_nextIdForLabel"/>
                            <t t-set="color" t-value="props.getColor(filter.color_index)"/>
                            <t t-set="isColorNumber" t-value="typeof color === 'number'"/>

                            <t t-if="props.avatar_field and !['all', false].includes(filter.value)">
                                <Popover trigger="'hover'" position="'top'" title="filter.label">
                                    <t t-call="web.CalendarFilterSection.filter"/>
                                    <t t-set="opened">
                                        <img class="mx-auto" t-attf-src="/web/image/{{props.avatar_model}}/{{filter.value}}/{{props.avatar_field}}"/>
                                    </t>
                                </Popover>
                            </t>
                            <t t-else="">
                                <t t-call="web.CalendarFilterSection.filter"/>
                            </t>
                        </t>
                    </t>
                </div>
            </t>

            <FilterSelectorAdapter t-if="props.write_model or props.write_field" t-props="props"/>
        </div>
    </t>

    <t t-name="web.CalendarFilterSection.filter" owl="1">
        <div t-attf-class="o_calendar_filter_item w-100 position-relative mb-2 {{ isColorNumber ? 'o_cw_filter_color_' + color : '' }}"
             t-att-data-value="filter.value" t-att-data-id="filter.id">

            <input type="checkbox" t-att-id="idForLabel" name="selection"
                class="position-absolute" t-att-checked="filter.active"
                t-on-click.stop="_onFilterToggle(filter.value)"
            />

            <label t-att-for="idForLabel" class="d-flex align-items-center m-0">
                <span t-attf-class="o_cw_filter_input_bg align-items-center d-flex flex-shrink-0 justify-content-center position-relative mr-1"
                    t-att-class="{o_beside_avatar: props.avatar_field}"
                    t-att-style="color and !isColorNumber ? 'border-color:'+color+';background-color:'+color : ''"
                >
                    <i class="fa fa-check position-relative"/>
                </span>
                <i t-if="filter.value == 'all'"
                    class="o_cw_filter_avatar fa fa-users fa-fw  flex-shrink-0 mr-1"
                    role="img" aria-label="Avatar" title="Avatar"
                />
                <img t-elif="props.avatar_field and filter.value"
                    t-attf-src="/web/image/{{props.avatar_model}}/{{filter.value}}/{{props.avatar_field}}"
                    class="o_cw_filter_avatar flex-shrink-0 mr-1"
                    alt="Avatar"
                />
                <span class="o_cw_filter_title text-truncate flex-grow" t-esc="filter.label" />
            </label>

            <button t-if="filter.id" class="o_remove btn bg-white text-700 py-0 px-2"
                title="Remove this favorite from the list"
                role="img"
                aria-label="Remove this favorite from the list"
                t-on-click.prevent.stop="_onFilterRemove(filter.value, filter.id)"
            >
                <i class="fa fa-times"/>
            </button>
        </div>
    </t>

    <t t-name="web.CalendarPopover" owl="1">
        <div class="o_cw_popover" t-attf-class="o_calendar_color_{{ props.color }}">
            <div class="card-header d-flex justify-content-between py-2 pr-2">
                <h4 class="popover-header border-0 p-0 pt-1"
                    t-esc="props.title"/>
                <span class="o_cw_popover_close ml-auto"
                    t-on-click="trigger('o-popover-close')"
                >
                    <i class="fa fa-close small"/>
                </span>
            </div>
            <t t-call="web.CalendarPopover.body"/>
        </div>
    </t>

    <t t-name="web.CalendarPopover.body" owl="1">
        <div class="o_cw_body">
            <ul class="list-group list-group-flush">
                <li t-if="!props.date.hide and props.date.value" class="list-group-item">
                    <i class="fa fa-fw fa-calendar-o"/> <b class="text-capitalize" t-esc="props.date.value"/>
                    <small t-if="props.date.duration">
                        <b> (<t t-esc="props.date.duration"/>)</b>
                    </small>
                </li>
                <li t-if="!props.time.hide and props.time.value" class="list-group-item">
                    <i class="fa fa-fw fa-clock-o"/> <b t-esc="props.time.value"/>
                    <small t-if="props.time.duration">
                        <b> (<t t-esc="props.time.duration"/>)</b>
                    </small>
                </li>
            </ul>
            <CalendarPopoverFieldsAdapter t-if="displayEventDetails"
                modelName="props.modelName"
                displayFields="displayedFields"
                fields="props.fields"
                record="props.record"
            />
            <div t-if="displayControls" class="card-footer border-top">
                <a t-if="isEventEditable"
                    href="#" class="btn btn-primary o_cw_popover_edit"
                    t-on-click.prevent="trigger('edit-event', { id: props.eventId, title: props.title })"
                >Edit</a>
                <a t-if="isEventDeletable"
                    href="#" class="btn btn-secondary o_cw_popover_delete ml-2"
                    t-on-click.prevent="trigger('delete-event', { id: props.eventId })"
                >Delete</a>
            </div>
        </div>
    </t>

    <t t-name="web.CalendarYearPopover" owl="1">
        <div class="o_cw_popover">
            <div style="position: absolute; top: 0; right: 0.5rem;">
                <span class="o_cw_popover_close"
                    t-on-click="trigger('o-popover-close')">
                    <i class="fa fa-close small"></i>
                </span>
            </div>
            <div class="popover-body">
                <t t-call="web.CalendarYearPopover.body"/>
            </div>
        </div>
    </t>

    <t t-name="web.CalendarYearPopover.body" owl="1">
        <div class="o_cw_body">
            <t t-foreach="props.groupKeys" t-as="groupKey" t-key="groupKey">
                <div class="font-weight-bold mt-2" t-esc="groupKey"/>
                <t t-foreach="props.groupedEvents[groupKey]" t-as="event" t-key="event.id">
                    <a href="#" class="o_cw_popover_link btn-link d-block"
                        t-att-data-id="event.id"
                        t-att-data-title="event.name"
                        t-on-click.prevent.stop="trigger('open-event', event)"
                        t-esc="event.name"
                        />
                </t>
            </t>
            <div class="mt-2">
                <a t-if="isEventCreateable" href="#" class="btn-link"
                    t-on-click.prevent.stop="trigger('create-event', props.date)">
                    <i class="fa fa-plus"/> Create
                </a>
            </div>
        </div>
    </t>

    <t t-name="CalendarView.buttons">
        <div class="o_calendar_buttons">
            <span class="o_calendar_navigation_buttons">
                <t t-call="CalendarView.navigation_buttons" />
            </span>
            <t t-if="!scaleDrop">
                <span class="o_calendar_scale_buttons">
                    <t t-call="CalendarView.scale_buttons" />
                </span>
            </t>
        </div>
    </t>

    <t t-name="CalendarView.navigation_buttons">
        <button class="o_calendar_button_prev btn btn-primary" aria-label="Previous" title="Previous"><span class="fa fa-arrow-left"/></button>
        <button class="o_calendar_button_today btn btn-primary">Today</button>
        <button class="o_calendar_button_next btn btn-primary" aria-label="Next" title="Next"><span class="fa fa-arrow-right"/></button>
    </t>

    <t t-name="CalendarView.scale_buttons">
        <div class="btn-group">
            <button type="button" t-if="scales.includes('day')" class="o_calendar_button_day btn btn-secondary">Day</button>
            <button type="button" t-if="scales.includes('week')" class="o_calendar_button_week btn btn-secondary">Week</button>
            <button type="button" t-if="scales.includes('month')" class="o_calendar_button_month btn btn-secondary">Month</button>
            <button type="button" t-if="scales.includes('year')" class="o_calendar_button_year btn btn-secondary">Year</button>
        </div>
    </t>

    <main t-name="CalendarView.quick_create" class="o_calendar_quick_create">
        <div class="form-group">
            <label for='name' class='col-form-label o_form_label'>Summary:</label>
            <input type='text' name='name' class="o_input o_required_modifier" t-att-value="widget.dataTemplate.name or None"/>
        </div>
    </main>
</template>
