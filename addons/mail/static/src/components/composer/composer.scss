// ------------------------------------------------------------------
// Layout
// ------------------------------------------------------------------

.o-Composer {
    display: grid;
    grid-template-areas:
        "sidebar-header core-header"
        "sidebar-main core-main"
        "sidebar-footer core-footer";
    grid-template-columns: auto 1fr;
    grid-template-rows: auto 1fr auto;

    &.o-hasCurrentPartnerAvatar {
        grid-template-columns: 50px 1fr;
        padding: map-get($spacers, 3) map-get($spacers, 3) map-get($spacers, 4) map-get($spacers, 1);

        &:not(.o-hasFooter) {
            padding-bottom: 20px;
        }

        &:not(.o-hasHeader) {
            padding-top: 20px;
        }
    }
}

.o-Composer-actionButtons {
    &.o-isComposerCompact {
        display: flex;
    }
    &:not(.o-isComposerCompact) {
        margin-top: 10px;
    }
}

.o-Composer-attachmentList {
    flex: 1 1 auto;

    &.o-isComposerCompact {
        max-height: 100px;
    }

    &:not(.o-isComposerCompact) {
        overflow-y: auto;
        max-height: 300px;
    }
}

.o-Composer-buttons {
    display: flex;
    align-items: stretch;
    align-self: stretch;
    flex: 0 0 auto;
    min-height: 41px; // match minimal-height of input, including border width

    &:not(.o-isComposerCompact) {
        border: 0;
        height: auto;
        padding: 0 10px;
        width: 100%;
    }
}

.o-Composer-coreFooter {
    grid-area: core-footer;
    overflow-x: hidden;

    &:not(.o-isComposerCompact) {
        margin-left: 0;
    }
}

.o-Composer-coreHeader {
    grid-area: core-header;
}

.o-Composer-coreMain {
    grid-area: core-main;
    min-width: 0;
    display: flex;
    flex-wrap: nowrap;
    align-items: flex-start;
    flex: 1 1 auto;

    &:not(.o-isComposerCompact) {
        flex-direction: column;
    }
}

.o-Composer-currentPartnerAvatar {
    width: 36px;
    height: 36px;
}

.o-Composer-followers {
    flex: 0 0 100%;
    margin-bottom: $o-mail-chatter-gap * 0.5;
}

.o-Composer-primaryToolButtons {
    display: flex;
    align-items: center;

    &.o-isComposerCompact {
        padding-left: map-get($spacers, 2);
        padding-right: map-get($spacers, 2);
    }
}

.o-Composer-sidebarMain {
    grid-area: sidebar-main;
    justify-self: center;
}

.o-Composer-subject {
    border-top: $border-width solid $border-color;
    border-right: $border-width solid $border-color;
    border-left: $border-width solid $border-color;
    border-radius: $o-mail-rounded-rectangle-border-radius-sm $o-mail-rounded-rectangle-border-radius-sm 0 0;
}

.o-Composer-subjectInput {
    display: flex;
    flex: 1;
    padding: map-get($spacers, 2) map-get($spacers, 3);
    border: 0;
}

.o-Composer-suggestedPartners {
    flex: 0 0 100%;
    margin-bottom: $o-mail-chatter-gap * 0.5;
}

.o-Composer-textInput {
    flex: 1 1 auto;
    align-self: stretch;

    &:not(.o-isComposerCompact) {
        border: 0;
        min-height: 40px;
    }
}

.o-Composer-threadTextualTypingStatus {
    font-size: $font-size-sm;
    overflow: hidden;
    text-overflow: ellipsis;

    &:before {
        // invisible character so that typing status bar has constant height, regardless of text content.
        content: "\200b"; /* unicode zero width space character */
    }
}

.o-Composer-toolButton {
    // keep a margin between the buttons to prevent their focus shadow from overlapping
    margin-left: map-get($spacers, 1);
    margin-right: map-get($spacers, 1);
}

.o-Composer-toolButtons {
    display: flex;
    padding-top: map-get($spacers, 1);
    padding-bottom: map-get($spacers, 1);

    &:not(.o-isComposerCompact) {
        flex-direction: row;
        justify-content: space-between;
        flex: 100%;
    }
}

.o-Composer-toolButtonSeparator {
    flex: 0 0 auto;
    margin-top: map-get($spacers, 2);
    margin-bottom: map-get($spacers, 2);
}

// ------------------------------------------------------------------
// Style
// ------------------------------------------------------------------

.o-Composer {
    background-color: lighten(gray('300'), 7%);
}

.o-Composer-actionButton.o-isLast.o-hasCurrentPartnerAvatar.o-isComposerCompact {
    border-radius: 0 $o-mail-rounded-rectangle-border-radius-lg $o-mail-rounded-rectangle-border-radius-lg 0;
}

.o-Composer-button.o-isComposerCompact {
    border-left: none; // overrides bootstrap button style

    :last-child {
        border-radius: 0 3px 3px 0;
    }
}

.o-Composer-buttonDiscard {
    border: 1px solid lighten(gray('400'), 5%);
}

.o-Composer-buttons {
    border: 0;
}

.o-Composer-coreMain:not(.o-isComposerCompact) {
    background: white;
    border: 1px solid lighten(gray('400'), 5%);

    // textarea should be all rounded but only when there is no subject field above
    &:not(.o-isComposerExtended) {
        border-radius: $o-mail-rounded-rectangle-border-radius-lg;
    }
}

.o-Composer-currentPartnerAvatar {
    object-fit: cover;
}

.o-Composer-textInput {
    appearance: none;
    outline: none;
    background-color: white;
    border: 0;
    border-top: 1px solid lighten(gray('400'), 5%);
    border-bottom: 1px solid lighten(gray('400'), 5%);
    border-left: 1px solid lighten(gray('400'), 5%);

    &:not(.o-isComposerCompact) {
        border: 0;
        border-radius: $o-mail-rounded-rectangle-border-radius-lg;
    }

    &.o-hasCurrentPartnerAvatar.o-isComposerCompact {
        border-radius: $o-mail-rounded-rectangle-border-radius-lg 0 0 $o-mail-rounded-rectangle-border-radius-lg;
    }
}

.o-Composer-toolButton {
    border: 0; // overrides bootstrap btn
    background-color: white; // overrides bootstrap btn-light
    color: gray('600'); // overrides bootstrap btn-light
    border-radius: 50%;

    &.o-isOpen {
        background-color: gray('200');
    }
}

.o-Composer-toolButtons {
    background-color: white;
    border-top: 1px solid lighten(gray('400'), 5%);
    border-bottom: 1px solid lighten(gray('400'), 5%);

    &:not(.o-isComposerCompact) {
        border-bottom: 0;
        border-radius: initial;
    }

    &:last-child:not(.o-hasComposerCurrentPartnerAvatar) {
        border-right: 1px solid lighten(gray('400'), 5%);
    }
}

.o-Composer-toolButtonSeparator {
    border-left: 1px solid lighten(gray('400'), 5%);
}

// TODO FIXME o-isOpen on the button should be enough.
// Style of button when popover is "open" comes from web.Popover, and we can't
// define a modifier on .o-Composer-button due to not being aware of Popover's
// state in context of template. https://github.com/odoo/owl/issues/693
.o_is_open .o-Composer-toolButton {
    background-color: gray('200');
}
